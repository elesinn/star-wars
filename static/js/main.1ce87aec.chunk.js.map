{"version":3,"sources":["components/stepperContext.tsx","service/films.ts","components/steps/episodesStep/episodeCard.tsx","components/steps/episodesStep/episodesList.tsx","components/steps/episodesStep/episodesStep.tsx","components/steps/resultStep.tsx","components/filmStepper.tsx","app.tsx","index.tsx"],"names":["StepperContext","createContext","StepperProvider","children","useState","activeStep","setActiveStep","selectedEpisode","setSelectedEpisode","result","setResult","Provider","value","nextStep","prev","prevStep","cancelRequestToken","filmsService","axios","get","then","response","data","results","url","cancel","CancelToken","source","cancelToken","token","useStyles","makeStyles","root","width","media","height","EpisodeCard","episodeUrl","classes","episode","setEpisode","useEffect","undefined","Card","className","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","Skeleton","color","opening_crawl","theme","createStyles","maxWidth","EpisodesList","episodes","selectedEpisodeUrl","onSelect","List","map","ListItem","button","selected","onClick","ListItemText","primary","episode_id","EpisodesContainer","styled","Container","display","justifyContent","EpisodesStep","films","setFilms","selectedFilmUrl","setSelectedFilmUrl","stepper","useContext","Button","find","film","disabled","ResultStep","TextField","fullWidth","id","name","label","type","username","InputProps","readOnly","email","style","marginTop","review","ReviewFormStep","React","lazy","FilmStepper","step","fallback","getStepContent","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ce87aec.chunk.js","sourcesContent":["import { createContext, useState } from 'react';\nimport { Film } from '../types/Films';\nimport { ReviewFormData } from '../types/FormData';\n\ninterface StepperController {\n  activeStep: number;\n  nextStep: () => void;\n  prevStep: () => void;\n  selectedEpisode?: Film;\n  setSelectedEpisode: (episdoe: Film | undefined) => void;\n  result?: ReviewFormData;\n  setResult: (result: ReviewFormData) => void;\n}\n\nexport const StepperContext = createContext<StepperController>(\n  {} as StepperController,\n);\n\nexport const StepperProvider: React.FunctionComponent = ({ children }) => {\n  const [activeStep, setActiveStep] = useState(0);\n  const [selectedEpisode, setSelectedEpisode] = useState<Film>();\n  const [result, setResult] = useState<ReviewFormData>();\n\n  const nextStep = () => {\n    setActiveStep((prev) => prev + 1);\n  };\n\n  const prevStep = () => {\n    setActiveStep((prev) => prev - 1);\n  };\n\n  return (\n    <StepperContext.Provider\n      value={{\n        activeStep,\n        nextStep,\n        prevStep,\n        selectedEpisode,\n        setSelectedEpisode,\n        result,\n        setResult,\n      }}\n    >\n      {children}\n    </StepperContext.Provider>\n  );\n};\n","import { Film, Films } from '../types/Films';\nimport axios, { CancelTokenSource } from 'axios';\n\nconst API_URL = 'https://swapi.dev/api';\nlet cancelRequestToken: CancelTokenSource;\n\nconst fetchAll = (): Promise<Film[] | undefined> => {\n  return axios\n    .get<Films>(`${API_URL}/films`)\n    .then((response) => response.data.results);\n};\n\nconst fetchFilmByUrl = (url: string): Promise<Film> => {\n  if (typeof cancelRequestToken != typeof undefined) {\n    cancelRequestToken.cancel();\n  }\n\n  cancelRequestToken = axios.CancelToken.source();\n\n  return axios\n    .get<Film>(url, { cancelToken: cancelRequestToken.token })\n    .then((response) => response.data);\n};\n\nexport const filmsService = {\n  fetchAll,\n  fetchFilmByUrl,\n};\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { filmsService } from '../../../service/films';\nimport { Film } from '../../../types/Films';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\ninterface EpisodeCardProps {\n  episodeUrl?: string;\n}\n\nexport const EpisodeCard = ({ episodeUrl }: EpisodeCardProps) => {\n  const classes = useStyles();\n  const [episode, setEpisode] = useState<Film | undefined>();\n\n  useEffect(() => {\n    if (!episodeUrl) return;\n    filmsService.fetchFilmByUrl(episodeUrl).then(setEpisode);\n\n    return () => {\n      setEpisode(undefined);\n    };\n  }, [episodeUrl]);\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        className={classes.media}\n        image=\"https://sun9-41.userapi.com/unlIPtpXzQtKbmbHSAhHtr3WMHXCmAuH0Ef4ZQ/Jti48-ed3Yw.jpg\"\n        title=\"Star Wars poster\"\n      />\n      <CardContent>\n        {episodeUrl ? (\n          <>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {episode ? episode?.title : <Skeleton height={50} />}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {episode ? episode?.opening_crawl : <Skeleton height={180} />}\n            </Typography>\n          </>\n        ) : (\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Please select an episode\n          </Typography>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n","import { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Film } from '../../../types/Films';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n    },\n  }),\n);\n\ninterface EpisodesListProps {\n  episodes?: Film[];\n  onSelect: (episodeUrl?: string) => void;\n  selectedEpisodeUrl?: string;\n}\n\nexport const EpisodesList = ({\n  episodes,\n  selectedEpisodeUrl,\n  onSelect,\n}: EpisodesListProps) => {\n  const classes = useStyles();\n\n  const handleSelectEpisode = (url?: string) => {\n    onSelect(url);\n  };\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        {episodes?.map((episode) => (\n          <ListItem\n            button\n            key={episode.episode_id}\n            selected={episode.url === selectedEpisodeUrl}\n            onClick={() => {\n              handleSelectEpisode(episode.url);\n            }}\n          >\n            <ListItemText primary={episode.title} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n};\n","import { Button, Container, styled } from '@material-ui/core';\nimport { useState, useEffect, useContext } from 'react';\nimport { filmsService } from '../../../service/films';\nimport { Film } from '../../../types/Films';\nimport { StepperContext } from '../../stepperContext';\nimport { EpisodeCard } from './episodeCard';\nimport { EpisodesList } from './episodesList';\n\nconst EpisodesContainer = styled(Container)({\n  display: 'flex',\n  justifyContent: 'space-between',\n});\n\nexport const EpisodesStep = () => {\n  const [films, setFilms] = useState<Film[] | undefined>([]);\n  const [selectedFilmUrl, setSelectedFilmUrl] = useState<string>();\n  const stepper = useContext(StepperContext);\n\n  useEffect(() => {\n    filmsService.fetchAll().then(setFilms);\n  }, []);\n\n  const handleSelect = () => {\n    stepper.setSelectedEpisode(\n      films?.find((film) => film.url === selectedFilmUrl),\n    );\n    stepper.nextStep();\n  };\n\n  return (\n    <div>\n      <EpisodesContainer>\n        <EpisodesList\n          episodes={films}\n          selectedEpisodeUrl={selectedFilmUrl}\n          onSelect={setSelectedFilmUrl}\n        />\n        <EpisodeCard episodeUrl={selectedFilmUrl} />\n      </EpisodesContainer>\n      <Container>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleSelect}\n          disabled={!selectedFilmUrl}\n        >\n          Select episode\n        </Button>\n      </Container>\n    </div>\n  );\n};\n","import { StepperContext } from '../stepperContext';\nimport { useContext } from 'react';\nimport { Container, TextField, Typography } from '@material-ui/core';\n\nexport const ResultStep = () => {\n  const stepper = useContext(StepperContext);\n  return (\n    <Container>\n      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n        Your review for \"{stepper.selectedEpisode?.title}\" episode:\n      </Typography>\n      <TextField\n        fullWidth\n        id=\"username\"\n        name=\"username\"\n        label=\"Username\"\n        type=\"text\"\n        value={stepper.result?.username}\n        InputProps={{\n          readOnly: true,\n        }}\n      />\n      <TextField\n        fullWidth\n        id=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        value={stepper.result?.email}\n        InputProps={{\n          readOnly: true,\n        }}\n      />\n      <TextField\n        id=\"review\"\n        name=\"review\"\n        style={{ width: '100%', marginTop: '10px' }}\n        value={stepper.result?.review}\n        InputProps={{\n          readOnly: true,\n        }}\n      />\n    </Container>\n  );\n};\n","import React, { Suspense, useContext } from 'react';\nimport { EpisodesStep } from './steps/episodesStep/episodesStep';\nimport { ResultStep } from './steps/resultStep';\nimport { StepperContext } from './stepperContext';\nimport { Skeleton } from '@material-ui/lab';\nconst ReviewFormStep = React.lazy(() => import('./steps/reviewFormStep'));\n\nexport const FilmStepper = () => {\n  const stepper = useContext(StepperContext);\n\n  function getStepContent(step: number) {\n    switch (step) {\n      case 0:\n        return <EpisodesStep />;\n      case 1:\n        return (\n          <Suspense fallback={<Skeleton height={400} />}>\n            <ReviewFormStep />\n          </Suspense>\n        );\n      case 2:\n        return <ResultStep />;\n      default:\n        return 'Unknown step';\n    }\n  }\n\n  return <div>{getStepContent(stepper.activeStep)}</div>;\n};\n","import { Container } from '@material-ui/core';\nimport { FilmStepper } from './components/filmStepper';\nimport { StepperProvider } from './components/stepperContext';\n\nfunction App() {\n  return (\n    <Container maxWidth=\"md\">\n      <StepperProvider>\n        <FilmStepper />\n      </StepperProvider>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}